name: Draft Release

on:
  push:
    branches:
      - main
      - dev/*.*.*

permissions:
  contents: write
  actions: write       # Necessary to cancel workflow executions
  checks: write        # Necessary to write reports
  pull-requests: write # Necessary to comment on PRs

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  # Refs: https://github.com/release-drafter/release-drafter
  update-release-draft:
    runs-on: ubuntu-latest

    outputs:
      CURRENT_VERSION: ${{ steps.version.outputs.project_version }}
      RELEASE_DRAFT_BODY: ${{ steps.release-drafter.outputs.body }}

    steps:
      - uses: actions/checkout@v3
        with:
          repository: netsehq/netse
          ssh-key: ${{ secrets.PRIVATE_REPO_SSH_KEY }}

      - name: Read version from VERSION file
        id: version
        run: echo "::set-output name=project_version::$(cat VERSION)"

      - uses: release-drafter/release-drafter@v5
        id: release-drafter
        with:
          config-name: release-drafter.yml
          name: v${{ steps.version.outputs.project_version }}
          tag: v${{ steps.version.outputs.project_version }}
          version: ${{ steps.version.outputs.project_version }}
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # !!! Not available in the private repository free plan !!!
  # update-release-pr:
  #   needs: update-release-draft

  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         repository: netsehq/netse
  #         ssh-key: ${{ secrets.PRIVATE_REPO_SSH_KEY }}
  #         fetch-depth: 0

  #     - name: Get release version
  #       id: release-version
  #       run: |
  #         RELEASE_VERSION=`npx semver -i patch ${{ needs.update-release-draft.outputs.CURRENT_VERSION }}`
  #         echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT

  #     - name: Get base branch
  #       id: base-branch
  #       run: |
  #         GITHUB_REF_NAME=${{ github.ref_name }}
  #         WILDCARD_VERSION=${GITHUB_REF_NAME#dev/}
  #         # set "release/current" or "release/X.X.x" to BASE_BRANCH
  #         BASE_BRANCH=release/${{ github.ref_name == 'main' && 'current' || '$WILDCARD_VERSION' }}
  #         echo "BASE_BRANCH=$BASE_BRANCH" >> $GITHUB_OUTPUT

  #     - uses: actions/setup-ruby@v1
  #       with:
  #         ruby-version: 3.1

  #     - name: Create/Update Pull Request
  #       run: |
  #         gem install -N git-pr-release -v "2.2.0"
  #         git-pr-release --no-fetch
  #       env:
  #         GIT_PR_RELEASE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         GIT_PR_RELEASE_BRANCH_PRODUCTION: ${{ steps.base-branch.outputs.BASE_BRANCH }}
  #         GIT_PR_RELEASE_BRANCH_STAGING: ${{ github.ref_name }}
  #         GIT_PR_RELEASE_TEMPLATE: .github/git-pr-release-template.erb
  #         GIT_PR_RELEASE_TITLE: Release v${{ steps.release-version.outputs.RELEASE_VERSION }}
  #         GIT_PR_RELEASE_BODY: ${{ needs.update-release-draft.outputs.RELEASE_DRAFT_BODY }}
